# coding: utf-8

"""
    Prequalification Credit Report

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: OpenAPI3.1.0.12
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from experian_prequal import schemas  # noqa: F401


class EnhancedPaymentData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            actualPaymentAmount = schemas.StrSchema
            chargeoffAmount = schemas.StrSchema
            ciiCode = schemas.StrSchema
            complianceCondition = schemas.StrSchema
            creditLimitAmount = schemas.StrSchema
            enhancedAccountCondition = schemas.StrSchema
            enhancedAccountType = schemas.StrSchema
            enhancedPaymentHistory84 = schemas.StrSchema
            enhancedPaymentStatus = schemas.StrSchema
            enhancedSpecialComment = schemas.StrSchema
            enhancedTerms = schemas.StrSchema
            enhancedTermsFrequency = schemas.StrSchema
            firstDelinquencyDate = schemas.StrSchema
            highBalanceAmount = schemas.StrSchema
            maxDelinquencyCode = schemas.StrSchema
            mortgageId = schemas.StrSchema
            originalCreditorClassificationCode = schemas.StrSchema
            originalLoanAmount = schemas.StrSchema
            paymentLevelDate = schemas.StrSchema
            purchasedPortfolioFromName = schemas.StrSchema
            secondDelinquencyDate = schemas.StrSchema
            secondaryAgencyCode = schemas.StrSchema
            secondaryAgencyId = schemas.StrSchema
            specialPaymentAmount = schemas.StrSchema
            specialPaymentCode = schemas.StrSchema
            specialPaymentDate = schemas.StrSchema
            __annotations__ = {
                "actualPaymentAmount": actualPaymentAmount,
                "chargeoffAmount": chargeoffAmount,
                "ciiCode": ciiCode,
                "complianceCondition": complianceCondition,
                "creditLimitAmount": creditLimitAmount,
                "enhancedAccountCondition": enhancedAccountCondition,
                "enhancedAccountType": enhancedAccountType,
                "enhancedPaymentHistory84": enhancedPaymentHistory84,
                "enhancedPaymentStatus": enhancedPaymentStatus,
                "enhancedSpecialComment": enhancedSpecialComment,
                "enhancedTerms": enhancedTerms,
                "enhancedTermsFrequency": enhancedTermsFrequency,
                "firstDelinquencyDate": firstDelinquencyDate,
                "highBalanceAmount": highBalanceAmount,
                "maxDelinquencyCode": maxDelinquencyCode,
                "mortgageId": mortgageId,
                "originalCreditorClassificationCode": originalCreditorClassificationCode,
                "originalLoanAmount": originalLoanAmount,
                "paymentLevelDate": paymentLevelDate,
                "purchasedPortfolioFromName": purchasedPortfolioFromName,
                "secondDelinquencyDate": secondDelinquencyDate,
                "secondaryAgencyCode": secondaryAgencyCode,
                "secondaryAgencyId": secondaryAgencyId,
                "specialPaymentAmount": specialPaymentAmount,
                "specialPaymentCode": specialPaymentCode,
                "specialPaymentDate": specialPaymentDate,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["actualPaymentAmount"]) -> MetaOapg.properties.actualPaymentAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["chargeoffAmount"]) -> MetaOapg.properties.chargeoffAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ciiCode"]) -> MetaOapg.properties.ciiCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["complianceCondition"]) -> MetaOapg.properties.complianceCondition: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creditLimitAmount"]) -> MetaOapg.properties.creditLimitAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enhancedAccountCondition"]) -> MetaOapg.properties.enhancedAccountCondition: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enhancedAccountType"]) -> MetaOapg.properties.enhancedAccountType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enhancedPaymentHistory84"]) -> MetaOapg.properties.enhancedPaymentHistory84: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enhancedPaymentStatus"]) -> MetaOapg.properties.enhancedPaymentStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enhancedSpecialComment"]) -> MetaOapg.properties.enhancedSpecialComment: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enhancedTerms"]) -> MetaOapg.properties.enhancedTerms: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enhancedTermsFrequency"]) -> MetaOapg.properties.enhancedTermsFrequency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["firstDelinquencyDate"]) -> MetaOapg.properties.firstDelinquencyDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["highBalanceAmount"]) -> MetaOapg.properties.highBalanceAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxDelinquencyCode"]) -> MetaOapg.properties.maxDelinquencyCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mortgageId"]) -> MetaOapg.properties.mortgageId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["originalCreditorClassificationCode"]) -> MetaOapg.properties.originalCreditorClassificationCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["originalLoanAmount"]) -> MetaOapg.properties.originalLoanAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["paymentLevelDate"]) -> MetaOapg.properties.paymentLevelDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["purchasedPortfolioFromName"]) -> MetaOapg.properties.purchasedPortfolioFromName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["secondDelinquencyDate"]) -> MetaOapg.properties.secondDelinquencyDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["secondaryAgencyCode"]) -> MetaOapg.properties.secondaryAgencyCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["secondaryAgencyId"]) -> MetaOapg.properties.secondaryAgencyId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["specialPaymentAmount"]) -> MetaOapg.properties.specialPaymentAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["specialPaymentCode"]) -> MetaOapg.properties.specialPaymentCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["specialPaymentDate"]) -> MetaOapg.properties.specialPaymentDate: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["actualPaymentAmount", "chargeoffAmount", "ciiCode", "complianceCondition", "creditLimitAmount", "enhancedAccountCondition", "enhancedAccountType", "enhancedPaymentHistory84", "enhancedPaymentStatus", "enhancedSpecialComment", "enhancedTerms", "enhancedTermsFrequency", "firstDelinquencyDate", "highBalanceAmount", "maxDelinquencyCode", "mortgageId", "originalCreditorClassificationCode", "originalLoanAmount", "paymentLevelDate", "purchasedPortfolioFromName", "secondDelinquencyDate", "secondaryAgencyCode", "secondaryAgencyId", "specialPaymentAmount", "specialPaymentCode", "specialPaymentDate", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["actualPaymentAmount"]) -> typing.Union[MetaOapg.properties.actualPaymentAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["chargeoffAmount"]) -> typing.Union[MetaOapg.properties.chargeoffAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ciiCode"]) -> typing.Union[MetaOapg.properties.ciiCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["complianceCondition"]) -> typing.Union[MetaOapg.properties.complianceCondition, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creditLimitAmount"]) -> typing.Union[MetaOapg.properties.creditLimitAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enhancedAccountCondition"]) -> typing.Union[MetaOapg.properties.enhancedAccountCondition, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enhancedAccountType"]) -> typing.Union[MetaOapg.properties.enhancedAccountType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enhancedPaymentHistory84"]) -> typing.Union[MetaOapg.properties.enhancedPaymentHistory84, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enhancedPaymentStatus"]) -> typing.Union[MetaOapg.properties.enhancedPaymentStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enhancedSpecialComment"]) -> typing.Union[MetaOapg.properties.enhancedSpecialComment, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enhancedTerms"]) -> typing.Union[MetaOapg.properties.enhancedTerms, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enhancedTermsFrequency"]) -> typing.Union[MetaOapg.properties.enhancedTermsFrequency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["firstDelinquencyDate"]) -> typing.Union[MetaOapg.properties.firstDelinquencyDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["highBalanceAmount"]) -> typing.Union[MetaOapg.properties.highBalanceAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxDelinquencyCode"]) -> typing.Union[MetaOapg.properties.maxDelinquencyCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mortgageId"]) -> typing.Union[MetaOapg.properties.mortgageId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["originalCreditorClassificationCode"]) -> typing.Union[MetaOapg.properties.originalCreditorClassificationCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["originalLoanAmount"]) -> typing.Union[MetaOapg.properties.originalLoanAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["paymentLevelDate"]) -> typing.Union[MetaOapg.properties.paymentLevelDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["purchasedPortfolioFromName"]) -> typing.Union[MetaOapg.properties.purchasedPortfolioFromName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["secondDelinquencyDate"]) -> typing.Union[MetaOapg.properties.secondDelinquencyDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["secondaryAgencyCode"]) -> typing.Union[MetaOapg.properties.secondaryAgencyCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["secondaryAgencyId"]) -> typing.Union[MetaOapg.properties.secondaryAgencyId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["specialPaymentAmount"]) -> typing.Union[MetaOapg.properties.specialPaymentAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["specialPaymentCode"]) -> typing.Union[MetaOapg.properties.specialPaymentCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["specialPaymentDate"]) -> typing.Union[MetaOapg.properties.specialPaymentDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["actualPaymentAmount", "chargeoffAmount", "ciiCode", "complianceCondition", "creditLimitAmount", "enhancedAccountCondition", "enhancedAccountType", "enhancedPaymentHistory84", "enhancedPaymentStatus", "enhancedSpecialComment", "enhancedTerms", "enhancedTermsFrequency", "firstDelinquencyDate", "highBalanceAmount", "maxDelinquencyCode", "mortgageId", "originalCreditorClassificationCode", "originalLoanAmount", "paymentLevelDate", "purchasedPortfolioFromName", "secondDelinquencyDate", "secondaryAgencyCode", "secondaryAgencyId", "specialPaymentAmount", "specialPaymentCode", "specialPaymentDate", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        actualPaymentAmount: typing.Union[MetaOapg.properties.actualPaymentAmount, str, schemas.Unset] = schemas.unset,
        chargeoffAmount: typing.Union[MetaOapg.properties.chargeoffAmount, str, schemas.Unset] = schemas.unset,
        ciiCode: typing.Union[MetaOapg.properties.ciiCode, str, schemas.Unset] = schemas.unset,
        complianceCondition: typing.Union[MetaOapg.properties.complianceCondition, str, schemas.Unset] = schemas.unset,
        creditLimitAmount: typing.Union[MetaOapg.properties.creditLimitAmount, str, schemas.Unset] = schemas.unset,
        enhancedAccountCondition: typing.Union[MetaOapg.properties.enhancedAccountCondition, str, schemas.Unset] = schemas.unset,
        enhancedAccountType: typing.Union[MetaOapg.properties.enhancedAccountType, str, schemas.Unset] = schemas.unset,
        enhancedPaymentHistory84: typing.Union[MetaOapg.properties.enhancedPaymentHistory84, str, schemas.Unset] = schemas.unset,
        enhancedPaymentStatus: typing.Union[MetaOapg.properties.enhancedPaymentStatus, str, schemas.Unset] = schemas.unset,
        enhancedSpecialComment: typing.Union[MetaOapg.properties.enhancedSpecialComment, str, schemas.Unset] = schemas.unset,
        enhancedTerms: typing.Union[MetaOapg.properties.enhancedTerms, str, schemas.Unset] = schemas.unset,
        enhancedTermsFrequency: typing.Union[MetaOapg.properties.enhancedTermsFrequency, str, schemas.Unset] = schemas.unset,
        firstDelinquencyDate: typing.Union[MetaOapg.properties.firstDelinquencyDate, str, schemas.Unset] = schemas.unset,
        highBalanceAmount: typing.Union[MetaOapg.properties.highBalanceAmount, str, schemas.Unset] = schemas.unset,
        maxDelinquencyCode: typing.Union[MetaOapg.properties.maxDelinquencyCode, str, schemas.Unset] = schemas.unset,
        mortgageId: typing.Union[MetaOapg.properties.mortgageId, str, schemas.Unset] = schemas.unset,
        originalCreditorClassificationCode: typing.Union[MetaOapg.properties.originalCreditorClassificationCode, str, schemas.Unset] = schemas.unset,
        originalLoanAmount: typing.Union[MetaOapg.properties.originalLoanAmount, str, schemas.Unset] = schemas.unset,
        paymentLevelDate: typing.Union[MetaOapg.properties.paymentLevelDate, str, schemas.Unset] = schemas.unset,
        purchasedPortfolioFromName: typing.Union[MetaOapg.properties.purchasedPortfolioFromName, str, schemas.Unset] = schemas.unset,
        secondDelinquencyDate: typing.Union[MetaOapg.properties.secondDelinquencyDate, str, schemas.Unset] = schemas.unset,
        secondaryAgencyCode: typing.Union[MetaOapg.properties.secondaryAgencyCode, str, schemas.Unset] = schemas.unset,
        secondaryAgencyId: typing.Union[MetaOapg.properties.secondaryAgencyId, str, schemas.Unset] = schemas.unset,
        specialPaymentAmount: typing.Union[MetaOapg.properties.specialPaymentAmount, str, schemas.Unset] = schemas.unset,
        specialPaymentCode: typing.Union[MetaOapg.properties.specialPaymentCode, str, schemas.Unset] = schemas.unset,
        specialPaymentDate: typing.Union[MetaOapg.properties.specialPaymentDate, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EnhancedPaymentData':
        return super().__new__(
            cls,
            *args,
            actualPaymentAmount=actualPaymentAmount,
            chargeoffAmount=chargeoffAmount,
            ciiCode=ciiCode,
            complianceCondition=complianceCondition,
            creditLimitAmount=creditLimitAmount,
            enhancedAccountCondition=enhancedAccountCondition,
            enhancedAccountType=enhancedAccountType,
            enhancedPaymentHistory84=enhancedPaymentHistory84,
            enhancedPaymentStatus=enhancedPaymentStatus,
            enhancedSpecialComment=enhancedSpecialComment,
            enhancedTerms=enhancedTerms,
            enhancedTermsFrequency=enhancedTermsFrequency,
            firstDelinquencyDate=firstDelinquencyDate,
            highBalanceAmount=highBalanceAmount,
            maxDelinquencyCode=maxDelinquencyCode,
            mortgageId=mortgageId,
            originalCreditorClassificationCode=originalCreditorClassificationCode,
            originalLoanAmount=originalLoanAmount,
            paymentLevelDate=paymentLevelDate,
            purchasedPortfolioFromName=purchasedPortfolioFromName,
            secondDelinquencyDate=secondDelinquencyDate,
            secondaryAgencyCode=secondaryAgencyCode,
            secondaryAgencyId=secondaryAgencyId,
            specialPaymentAmount=specialPaymentAmount,
            specialPaymentCode=specialPaymentCode,
            specialPaymentDate=specialPaymentDate,
            _configuration=_configuration,
            **kwargs,
        )
