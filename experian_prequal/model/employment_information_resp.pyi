# coding: utf-8

"""
    Prequalification Credit Report

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: OpenAPI3.1.0.12
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from experian_prequal import schemas  # noqa: F401


class EmploymentInformationResp(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            addressExtraLine = schemas.StrSchema
            addressFirstLine = schemas.StrSchema
            addressSecondLine = schemas.StrSchema
            firstReportedDate = schemas.StrSchema
            lastUpdatedDate = schemas.StrSchema
            name = schemas.StrSchema
            source = schemas.StrSchema
            zipCode = schemas.StrSchema
            __annotations__ = {
                "addressExtraLine": addressExtraLine,
                "addressFirstLine": addressFirstLine,
                "addressSecondLine": addressSecondLine,
                "firstReportedDate": firstReportedDate,
                "lastUpdatedDate": lastUpdatedDate,
                "name": name,
                "source": source,
                "zipCode": zipCode,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressExtraLine"]) -> MetaOapg.properties.addressExtraLine: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressFirstLine"]) -> MetaOapg.properties.addressFirstLine: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressSecondLine"]) -> MetaOapg.properties.addressSecondLine: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["firstReportedDate"]) -> MetaOapg.properties.firstReportedDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastUpdatedDate"]) -> MetaOapg.properties.lastUpdatedDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["source"]) -> MetaOapg.properties.source: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["zipCode"]) -> MetaOapg.properties.zipCode: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["addressExtraLine", "addressFirstLine", "addressSecondLine", "firstReportedDate", "lastUpdatedDate", "name", "source", "zipCode", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressExtraLine"]) -> typing.Union[MetaOapg.properties.addressExtraLine, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressFirstLine"]) -> typing.Union[MetaOapg.properties.addressFirstLine, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressSecondLine"]) -> typing.Union[MetaOapg.properties.addressSecondLine, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["firstReportedDate"]) -> typing.Union[MetaOapg.properties.firstReportedDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastUpdatedDate"]) -> typing.Union[MetaOapg.properties.lastUpdatedDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["source"]) -> typing.Union[MetaOapg.properties.source, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["zipCode"]) -> typing.Union[MetaOapg.properties.zipCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["addressExtraLine", "addressFirstLine", "addressSecondLine", "firstReportedDate", "lastUpdatedDate", "name", "source", "zipCode", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        addressExtraLine: typing.Union[MetaOapg.properties.addressExtraLine, str, schemas.Unset] = schemas.unset,
        addressFirstLine: typing.Union[MetaOapg.properties.addressFirstLine, str, schemas.Unset] = schemas.unset,
        addressSecondLine: typing.Union[MetaOapg.properties.addressSecondLine, str, schemas.Unset] = schemas.unset,
        firstReportedDate: typing.Union[MetaOapg.properties.firstReportedDate, str, schemas.Unset] = schemas.unset,
        lastUpdatedDate: typing.Union[MetaOapg.properties.lastUpdatedDate, str, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        source: typing.Union[MetaOapg.properties.source, str, schemas.Unset] = schemas.unset,
        zipCode: typing.Union[MetaOapg.properties.zipCode, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EmploymentInformationResp':
        return super().__new__(
            cls,
            *args,
            addressExtraLine=addressExtraLine,
            addressFirstLine=addressFirstLine,
            addressSecondLine=addressSecondLine,
            firstReportedDate=firstReportedDate,
            lastUpdatedDate=lastUpdatedDate,
            name=name,
            source=source,
            zipCode=zipCode,
            _configuration=_configuration,
            **kwargs,
        )
